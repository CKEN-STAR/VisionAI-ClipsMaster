[pytest]
# 测试发现和执行配置
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = tests/reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 执行配置
addopts = 
    --strict-markers
    --tb=short
    --no-header
    --color=yes

# 标记定义
markers =
    slow: 执行时间较长的测试
    memory: 需要较大内存的测试
    model: 需要加载模型的测试
    chinese: 中文内容相关的测试
    english: 英文内容相关的测试
    unit: 单元测试
    integration: 集成测试
    functional: 功能测试
    performance: 性能测试
    coverage: 覆盖率相关测试
    core_functionality: 核心功能测试
    ui_interface: UI界面测试
    export_compatibility: 导出兼容性测试
    exception_recovery: 异常恢复测试
    security_compliance: 安全合规测试
    
# 缓存目录
cache_dir = tests/.pytest_cache

# 终端输出
console_output_style = progress

# 异常处理
xfail_strict = true

# 覆盖率设置
[coverage:run]
source = src
omit =
    */tests/*
    */site-packages/*
    */__init__.py
    */migrations/*

[coverage:report]
# 排除特定行
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    DEBUG
    warnings.warn

# HTML报告设置
[coverage:html]
directory = coverage_reports/html
title = VisionAI-ClipsMaster 代码覆盖率报告 