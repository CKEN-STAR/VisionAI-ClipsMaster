[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "visionai-clipsmaster"
version = "1.0.1"
description = "AI驱动的短剧视频混剪大师"
authors = [{name = "VisionAI Team"}]
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["ai", "video", "editing", "clips", "short-drama"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Video :: Non-Linear Editor",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["tests"]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101"]
targets = ["src"]

[tool.bandit.assert_used]
skips = ["*/test_*.py"]

[tool.bandit.blacklist_imports]
pickle = ["pickle"]
subprocess = ["subprocess"]
xml = ["xml"]

[tool.bandit.blacklist_calls]
subprocess = ["subprocess.Popen", "subprocess.call", "subprocess.run"]
os = ["os.system", "os.popen"]
builtins = ["eval", "exec"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "\\.\\.\\."
] 